#if !canImport(ObjectiveC)
import XCTest

extension ApplicationVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ApplicationVisualTests = [
        ("testCannyEdgeDetection", testCannyEdgeDetection),
        ("testColorQuantization", testColorQuantization),
        ("testDenoise", testDenoise),
        ("testDither", testDither),
        ("testHarrisCornerDetection", testHarrisCornerDetection),
        ("testJulia", testJulia),
        ("testLifeGame", testLifeGame),
        ("testOpenClose", testOpenClose),
        ("testPerlinNoise", testPerlinNoise),
        ("testTemplateMatching", testTemplateMatching),
    ]
}

extension BayerVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BayerVisualTests = [
        ("testBGGR", testBGGR),
        ("testBGGR_UInt8", testBGGR_UInt8),
        ("testGBRG", testGBRG),
        ("testGBRG_UInt8", testGBRG_UInt8),
        ("testGRBG", testGRBG),
        ("testGRBG_UInt8", testGRBG_UInt8),
        ("testRGGB", testRGGB),
        ("testRGGB_UInt8", testRGGB_UInt8),
    ]
}

extension BlendVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BlendVisualTests = [
        ("testBlends", testBlends),
    ]
}

extension DrawVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DrawVisualTests = [
        ("testCreateTextImage", testCreateTextImage),
        ("testDrawCircle", testDrawCircle),
        ("testDrawImage", testDrawImage),
        ("testDrawImageAlphaBlend", testDrawImageAlphaBlend),
        ("testDrawImageAlphaBlend_Double_RGB", testDrawImageAlphaBlend_Double_RGB),
        ("testDrawImageAlphaBlend_Double_RGBA", testDrawImageAlphaBlend_Double_RGBA),
        ("testDrawImageAlphaBlend_UInt8_RGB", testDrawImageAlphaBlend_UInt8_RGB),
        ("testDrawImageAlphaBlend_UInt8_RGBA", testDrawImageAlphaBlend_UInt8_RGBA),
        ("testDrawImageAlphaBlending_gray", testDrawImageAlphaBlending_gray),
        ("testDrawLine", testDrawLine),
        ("testDrawPolygon", testDrawPolygon),
        ("testDrawRect", testDrawRect),
        ("testDrawTextDouble", testDrawTextDouble),
        ("testDrawTextUInt8", testDrawTextUInt8),
    ]
}

extension FilterVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FilterVisualTests = [
        ("testBilateral", testBilateral),
        ("testGaussian", testGaussian),
        ("testGaussian2", testGaussian2),
        ("testLena", testLena),
        ("testMinMaxMedian", testMinMaxMedian),
        ("testNLMean", testNLMean),
        ("testSobelLaplacian", testSobelLaplacian),
    ]
}

extension FourierTransformerVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__FourierTransformerVisualTests = [
        ("testConvolutionWithFFT", testConvolutionWithFFT),
        ("testFFT", testFFT),
        ("testWaves", testWaves),
    ]
}

extension HistogramsVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HistogramsVisualTests = [
        ("testHistogramEqualizer", testHistogramEqualizer),
        ("testHistogramEqualizerColor", testHistogramEqualizerColor),
        ("testHistogramEqualizerDouble", testHistogramEqualizerDouble),
        ("testHistogramEqualizerInt", testHistogramEqualizerInt),
    ]
}

extension PaddingVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PaddingVisualTests = [
        ("testPadding", testPadding),
    ]
}

extension ResizeVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResizeVisualTests = [
        ("testResize", testResize),
        ("testResizeDownscale_lena", testResizeDownscale_lena),
        ("testResizeUpscale_lena", testResizeUpscale_lena),
    ]
}

extension SkeletonizerVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SkeletonizerVisualTests = [
        ("testSkeletonize", testSkeletonize),
    ]
}

extension SubimageVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SubimageVisualTests = [
        ("testSubimage", testSubimage),
    ]
}

extension TransformationVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TransformationVisualTests = [
        ("testTransform", testTransform),
    ]
}

extension WarpVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__WarpVisualTests = [
        ("testMatrix", testMatrix),
        ("testProjectiveTransformation", testProjectiveTransformation),
        ("testWarpBC", testWarpBC),
        ("testWarpBL", testWarpBL),
        ("testWarpLanczos2", testWarpLanczos2),
        ("testWarpLanczos3", testWarpLanczos3),
        ("testWarpNN", testWarpNN),
    ]
}

extension vImageVisualTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__vImageVisualTests = [
        ("testAlphaBlend", testAlphaBlend),
        ("testAlphaBlendFloat", testAlphaBlendFloat),
        ("testConvolve", testConvolve),
        ("testDilate", testDilate),
        ("testErode", testErode),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ApplicationVisualTests.__allTests__ApplicationVisualTests),
        testCase(BayerVisualTests.__allTests__BayerVisualTests),
        testCase(BlendVisualTests.__allTests__BlendVisualTests),
        testCase(DrawVisualTests.__allTests__DrawVisualTests),
        testCase(FilterVisualTests.__allTests__FilterVisualTests),
        testCase(FourierTransformerVisualTests.__allTests__FourierTransformerVisualTests),
        testCase(HistogramsVisualTests.__allTests__HistogramsVisualTests),
        testCase(PaddingVisualTests.__allTests__PaddingVisualTests),
        testCase(ResizeVisualTests.__allTests__ResizeVisualTests),
        testCase(SkeletonizerVisualTests.__allTests__SkeletonizerVisualTests),
        testCase(SubimageVisualTests.__allTests__SubimageVisualTests),
        testCase(TransformationVisualTests.__allTests__TransformationVisualTests),
        testCase(WarpVisualTests.__allTests__WarpVisualTests),
        testCase(vImageVisualTests.__allTests__vImageVisualTests),
    ]
}
#endif
